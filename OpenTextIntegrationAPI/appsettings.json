{
  "AllowedHosts": "*",

  "AllowedBoTypes": [
    "BUS1006",
    "BUS1001001",
    "BUS1001006",
    "BUS2250"
  ],

  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Swashbuckle": "Error"
    }
  },

  "FileLogger": {
    "LogDirectory": "C:\\integrationRESTAPI\\Logs",
    "LogLevel": "TRACE",
    "MaxFileSizeMB": 5,
    "FileNamePattern": "FCC_OPENTEXT_REST_API_{date}.log",
    "EnableRawInboundLogs": true, // Controla los raw logs de inbound (requests a tu API)
    "EnableRawApiLogs": true, // Controla los raw logs de API (llamadas a OpenText)
    "RawApiSubfolder": "Raw\\Outbound",
    "RawInboundSubfolder": "Raw\\Inbound",
    "RawMapSubfolder": "Raw\\Maps",
    "TraceHeaderName": "SimpleMDG_TraceLogID"
  },

  "EndpointLogging": {
    // Map your route prefixes (or OperationIds) to true/false
    // e.g. "AuthController_Login": true means log inbound for just that endpoint
    "/api/Auth/login": true,
    "/v1/Nodes/create": true,
    "OtherController_OtherAction": false
  },

  "OpenText": {
    "AuthUrl": "http://fcotcsbqas.floridacrystals.com/OTCS/cs.exe/api/v1/auth",
    "BaseUrl": "http://fcotcsbqas.floridacrystals.com/OTCS/cs.exe",
    "AuthPath": "/api/v1/auth",

    "RootFolderId": "7298112", // Replace with your actual root folder ID
    "AssetsRootFolderId": "7298003", // Replace with your actual assets root folder ID

    "ExtSystemId": "DDF",
    "expDateName": "MDG_EXP_DATE_CATEGORY",
    "ChangeRequestWSKtype": "27",
    "CreateFolderOnMove": "true",

    "internalUsername": "integrationRESTAPI",
    "internalPassword": "Nacho@1280",
    "internalDomain": "otds.admin",

    "uNamePIBUS2250": "SMDG_PI_BUS2250",
    "uNamePIBUS1006": "SMDG_PI_BUS1006",
    "uNamePIBUS1001006": "SMDG_PI_BUS1001006",
    "uNamePIBUS1001001": "SMDG_PI_BUS1001001",

    "uNameTIBUS2250": "SMDG_TI_BUS2250",
    "uNameTIBUS1006": "SMDG_TI_BUS1006",
    "uNameTIBUS1001006": "SMDG_TI_BUS1001006",
    "uNameTIBUS1001001": "SMDG_TI_BUS1001001",

    "uNameWTIBUS2250": "SMDG_WTI_BUS2250",
    "uNameWTIBUS1006": "SMDG_WTI_BUS1006",
    "uNameWTIBUS1001006": "SMDG_WTI_BUS1001006",
    "uNameWTIBUS1001001": "SMDG_WTI_BUS1001001",

    "DocumentTypeMapping": {
      "BUS1001.7269258": "Quote",
      "BUS1001.7269001": "Related Specifications",
      "BUS1001.7268869": "Certifications & Warranties",
      "BUS1001.7269478": "Correspondence",
      "BUS1001.7269537": "Documentation & Manuals",
      "BUS1001.7273269": "Material Safety Data Sheet MSDS",
      "BUS1001.7269479": "Material Image",
      "BUS1001.7269417": "Technical Drawings",
      "BUS1001.7273270": "Certifications and Warranties"
    }
  },

  "Swagger": {
    "MasterDataGet": {
      "Summary": "Retrieve Master Data Documents from Business Workspace",
      "Description": "This endpoint retrieves all documents associated with the Business Workspace for the specified business object type (boType) and business object ID (boId), excluding documents located in the 'Staging' folder (which are used for Change Requests). The response returns a JSON object containing a header and an array of file entries. The header includes details such as the business object type, business object ID, and the business workspace name (bwName). Each file entry provides the node ID, file name, document type, and expiration date (if available).\n\n**Required Parameters:**\n- **boType** (string): The business object type (e.g., BUS1006).\n- **boId** (string): The business object ID (formatted as required, e.g., padded with zeros).\n\n**Example Response JSON:**\n\n```json\n{\n  \"header\": {\n    \"boType\": \"BUS1006\",\n    \"boId\": \"000000012345\",\n    \"bwName\": \"Workspace Name\"\n  },\n  \"files\": [\n    { \"nodeId\": 12345, \"name\": \"Document1.pdf\", \"documentType\": \"Bank Information\", \"expirationDate\": null },\n    { \"nodeId\": 12346, \"name\": \"Document2.pdf\", \"documentType\": \"Check Request\", \"expirationDate\": \"2025-12-31T00:00:00\" }\n  ]\n}\n```\n\n**Error Codes:**\n- **400:** Invalid parameter value (e.g., missing or improperly formatted boType or boId).\n- **404:** Business Workspace not found.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "ChangeRequestGet": {
      "Summary": "Retrieve Change Request Documents from Business Workspace",
      "Description": "This endpoint retrieves all documents from the 'Staging' folder associated with the specified business object type (boType) and business object ID (boId). The response contains a JSON object with a header and an array of file entries. The header includes details such as the business object type, business object ID, and the business workspace name (bwName). Each file entry includes the node ID, file name, document type, and expiration date (if available).\n\n**Required Parameters:**\n- **boType** (string): The business object type (e.g., BUS1001006).\n- **boId** (string): The business object ID (formatted as required, e.g., padded with zeros).\n\n**Example Response JSON:**\n\n```json\n{\n  \"header\": {\n    \"boType\": \"BUS1001006\",\n    \"boId\": \"000000000123456\",\n    \"bwName\": \"Workspace Name\"\n  },\n  \"files\": [\n    { \"nodeId\": 11111, \"name\": \"StagingDoc1.pdf\", \"documentType\": \"Check Request\", \"expirationDate\": null },\n    { \"nodeId\": 11112, \"name\": \"StagingDoc2.pdf\", \"documentType\": \"Invoice\", \"expirationDate\": \"2025-12-31T00:00:00\" }\n  ]\n}\n```\n\n**Error Codes:**\n- **400:** Invalid parameter value (e.g., missing or improperly formatted boType or boId).\n- **404:** Business Workspace not found.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "ChangeRequestUpdate": {
      "Summary": "Update Change Request Data",
      "Description": "This endpoint updates (or creates) the Change Request data for the specified business object type (boType) and business object ID (boId). The request body must contain a JSON object with the following fields:\n\n**Required Parameter:**\n- **changeRequestName** (string, max 150): The name of the change request.\n\n**Optional Parameters:**\n- **mainBOId** (string, max 100): The main business object ID related to the change request.\n- **mainBOType** (string, max 100): The type of the main business object.\n- **template** (string, max 150): The template identifier used for the change request.\n- **objectID** (string, max 100): The identifier for the associated object.\n- **erp** (string, max 1000): ERP-related information.\n- **status** (string, max 30): The current status of the change request.\n- **createdBy** (string, max 100): The username of the creator.\n- **createdAt** (Timestamp): The creation date (format: yyyy-MM-ddTHH:mm:ss).\n- **modifiedAt** (Timestamp): The last modification date (format: yyyy-MM-ddTHH:mm:ss).\n- **modifiedBy** (string, max 100): The username of the last modifier.\n- **approvalVersion** (integer): The version number for approval.\n- **endTime** (Timestamp): The end time (format: yyyy-MM-ddTHH:mm:ss).\n- **requestType** (string, max 30): The type of request.\n- **objectType** (string, max 100): The object type classification.\n\n**Example Request JSON:**\n\n```json\n{\n  \"changeRequestName\": \"Update System Config\",\n  \"mainBOId\": \"123456\",\n  \"mainBOType\": \"BUS1001006\",\n  \"template\": \"Standard Template\",\n  \"objectID\": \"OBJ123\",\n  \"erp\": \"ERP-987654321\",\n  \"status\": \"Pending\",\n  \"createdBy\": \"jdoe\",\n  \"createdAt\": \"2025-01-01T00:00:00\",\n  \"modifiedAt\": \"2025-01-02T00:00:00\",\n  \"modifiedBy\": \"asmith\",\n  \"approvalVersion\": 1,\n  \"endTime\": \"2025-12-31T23:59:59\",\n  \"requestType\": \"Change\",\n  \"objectType\": \"Configuration\"\n}\n```\n\n**Error Codes:**\n- **400:** Invalid parameter value (e.g., missing required field or invalid format).\n- **401:** Unauthorized. Authentication is required.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "NodeGet": {
      "Summary": "Retrieve Node Content (Document) from Content Server",
      "Description": "This endpoint retrieves a node from the content server based on the provided node ID. It supports both MasterData and Change Request use cases by returning the node's metadata and, if available, its binary content.\n\n**Required Parameter:**\n- **id** (integer): The node ID to retrieve.\n\n**Example Response JSON (200 OK):**\n```json\n{\n  \"data\": {\n    \"id\": 12345,\n    \"name\": \"DocumentName.pdf\",\n    \"type\": 0,\n    \"type_name\": \"Document\",\n    \"create_date\": \"2025-03-10T00:00:00\",\n    \"modify_date\": \"2025-03-10T00:00:00\"\n  },\n  \"content\": \"Base64EncodedContent...\"\n}\n```\n\n**Error Codes:**\n- **400:** Invalid node ID provided.\n- **401:** Unauthorized. Authentication required.\n- **404:** Node not found.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "CreateDocumentNode": {
      "Summary": "Create Document Node in Content Server",
      "Description": "This endpoint creates a new Document node (type=144) in the Content Server under a specified parent folder. It requires the following query parameters: \n\n- **boType** (string): The business object type (e.g., BUS1006).\n- **boId** (string): The business object ID (formatted as required).\n- **docName** (string): The name of the document.\n- **file** (binary): The file to be uploaded.\n\nOptional parameters include:\n\n- **expirationDate** (string): The document's expiration date in the format 'yyyy-MM-ddTHH:mm:ss'.\n- **documentType** (string): The classification type to be assigned to the document.\n\nThe endpoint uses the Bearer token provided in the Authorization header to authenticate the request. It first searches for the corresponding Business Workspace based on boType and boId, then constructs a JSON body to create the node. If an expirationDate is provided, it is validated and formatted; its value is then used to set a classification for the document. \n\n**Example Request:**\n\nQuery parameters:\n- boType: BUS1006\n- boId: 000000012345\n- docName: MyDocument.pdf\n- expirationDate: 2025-01-01T00:00:00\n- documentType: Invoice\n\nFile: Provided as multipart/form-data with the key 'file'.\n\n**Example Response (200 OK):**\n\n```json\n{\n  \"nodeId\": 12345,\n  \"name\": \"MyDocument.pdf\",\n  \"type\": 144,\n  \"typeName\": \"Document\",\n  \"message\": \"Document created successfully.\"\n}\n```\n\n**Error Codes:**\n- **400:** Invalid parameter value.\n- **404:** Parent folder not found.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "NodeDelete": {
      "Summary": "Delete a Node from Content Server",
      "Description": "This endpoint deletes a node from the content server based on the provided node ID. The node ID must be passed as a path parameter, and a valid authorization ticket must be provided in the request header. On successful deletion, the endpoint returns a 200 OK status. \n\n**Required Parameters:**\n- **nodeId** (string): The unique identifier of the node to be deleted.\n- **Authorization** (header): A valid Bearer token (OTCS ticket).\n\n**Example Request:**\n\n```\nDELETE /v1/nodes/7297921\nAuthorization: Bearer <your_token_here>\n```\n\n**Example Response (200 OK):**\n\n```json\n{\n  \"message\": \"Node deleted successfully\"\n}\n```\n\n**Error Codes:**\n- **400:** The node ID provided is invalid or the node cannot be retrieved.\n- **401:** Unauthorized. A valid authentication token is required.\n- **500:** An internal server error occurred while attempting to delete the node. Please contact the API administrator."
    },
    "AuthLogin": {
      "Summary": "Authenticate External User to OpenText",
      "Description": "This endpoint authenticates external users using form fields and returns an OpenText ticket. The endpoint expects a form POST with the required fields 'Username' and 'Password', and an optional 'Domain'. On successful authentication, the endpoint returns a JSON object containing the ticket.\n\n**Required Parameters:**\n- **Username** (string): The username for authentication (e.g., 'integrationRESTAPI').\n- **Password** (string): The password for the account (e.g., 'Nacho@1280').\n\n**Optional Parameter:**\n- **Domain** (string): The domain if applicable (e.g., 'otds.admin').\n\n**Example Request:**\n\n```\nPOST /api/Auth/login\nContent-Type: application/x-www-form-urlencoded\n\nUsername=integrationRESTAPI&Password=Nacho@1280&Domain=otds.admin\n```\n\n**Example Response (200 OK):**\n\n```json\n{\n  \"ticket\": \"<the retrieved ticket>\"\n}\n```\n\n**Error Codes:**\n- **400:** Username and Password are required.\n- **500:** Authentication failed due to an internal error."
    },
    "ChangeRequestApprove": {
      "Summary": "Approve Change Request and Move Files to Main Business Object",
      "Description": "This endpoint approves a Change Request for the specified Change Request Business Object (crBoId) and the original Business Object (origBoId) of the given type (origBoType). The operation moves files from the 'Staging' folder to their corresponding folders in the main Business Object (e.g., Material or Supplier) and then relocates the Change Request to the Audit Logs folder.\n\n**Required Parameters:**\n- **crBoId** (string): The identifier for the Change Request Business Object.\n- **origBoType** (string): The type of the original Business Object (e.g., Material, BP).\n- **origBoId** (string): The identifier for the original Business Object.\n\n\n\n**Optional Parameters:**\n- **changeRequestName** (string, max 150): The name of the change request.\n **mainBOId** (string, max 100): The main business object ID related to the change request.\n- **mainBOType** (string, max 100): The type of the main business object.\n- **template** (string, max 150): The template identifier used for the change request.\n- **objectID** (string, max 100): The identifier for the associated object.\n- **erp** (string, max 1000): ERP-related information.\n- **status** (string, max 30): The current status of the change request.\n- **createdBy** (string, max 100): The username of the creator.\n- **createdAt** (Timestamp): The creation date (format: yyyy-MM-ddTHH:mm:ss).\n- **modifiedAt** (Timestamp): The last modification date (format: yyyy-MM-ddTHH:mm:ss).\n- **modifiedBy** (string, max 100): The username of the last modifier.\n- **approvalVersion** (integer): The version number for approval.\n- **endTime** (Timestamp): The end time (format: yyyy-MM-ddTHH:mm:ss).\n- **requestType** (string, max 30): The type of request.\n- **objectType** (string, max 100): The object type classification.\n\n**Example Request JSON:**\n\n```json\n{\n  \"changeRequestName\": \"Update System Config\",\n  \"mainBOId\": \"123456\",\n  \"mainBOType\": \"BUS1001006\",\n  \"template\": \"Standard Template\",\n  \"objectID\": \"OBJ123\",\n  \"erp\": \"ERP-987654321\",\n  \"status\": \"Pending\",\n  \"createdBy\": \"jdoe\",\n  \"createdAt\": \"2025-01-01T00:00:00\",\n  \"modifiedAt\": \"2025-01-02T00:00:00\",\n  \"modifiedBy\": \"asmith\",\n  \"approvalVersion\": 1,\n  \"endTime\": \"2025-12-31T23:59:59\",\n  \"requestType\": \"Change\",\n  \"objectType\": \"Configuration\"\n}\n```\n\n**Error Codes:**\n- **400:** Invalid parameter value.\n- **401:** Unauthorized. Authentication required.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "ChangeRequestReject": {
      "Summary": "Reject Change Request and Move to Audit Logs",
      "Description": "Rejects the specified Change Request (crBoId) and moves it from the *Staging* folder to the *Audit Logs* folder, effectively closing the request without applying changes to the main Business Object.\n\n**Required Route Parameter:**\n- **crBoId** *(string)* – Change Request Business Object ID.\n\n**Optional JSON Body Fields:**\n- **changeRequestName** (string, ≤ 150)\n- **template** (string, ≤ 150)\n- **objectID** (string, ≤ 100)\n- **erp** (string, ≤ 1000)\n- **status** (string, ≤ 30)\n- **createdBy** (string, ≤ 100)\n- **createdAt** (yyyy-MM-ddTHH:mm:ss)\n- **modifiedAt** (yyyy-MM-ddTHH:mm:ss)\n- **modifiedBy** (string, ≤ 100)\n- **approvalVersion** (integer)\n- **endTime** (yyyy-MM-ddTHH:mm:ss)\n- **requestType** (string, ≤ 30)\n- **objectType** (string, ≤ 100)\n\n**Example Request Body:**\n```json\n{\n  \"changeRequestName\": \"Update System Config\",\n  \"template\": \"Standard Template\",\n  \"objectID\": \"OBJ123\",\n  \"erp\": \"ERP-987654321\",\n  \"status\": \"Pending\",\n  \"createdBy\": \"jdoe\",\n  \"createdAt\": \"2025-01-01T00:00:00\",\n  \"modifiedAt\": \"2025-01-02T00:00:00\",\n  \"modifiedBy\": \"asmith\",\n  \"approvalVersion\": 1,\n  \"endTime\": \"2025-12-31T23:59:59\",\n  \"requestType\": \"Change\",\n  \"objectType\": \"Configuration\"\n}\n```\n\n**Error Codes:**\n- **400** – Invalid parameter value.\n- **401** – Unauthorized (authentication required).\n- **500** – Internal server error; contact the API administrator."
    },
    "UpsertGlobalLogo": {
      "Summary": "Create or Update Global Logo",
      "Description": "This endpoint creates or updates the global logo for SimpleMDG in OpenText. If a logo already exists, a new version will be created. The response returns a JSON object containing the status of the operation and details about the logo file.\n\n**Required Parameters:**\n- **file** (IFormFile): The logo image file to upload.\n\n**Example Response JSON:**\n\n```json\n{\n  \"success\": true,\n  \"message\": \"Global logo updated successfully with new version\",\n  \"fileId\": \"12345\",\n  \"fileName\": \"logo.png\",\n  \"downloadUrl\": \"https://opentext.example.com/api/v2/nodes/12345/content\",\n  \"fileSize\": 24680,\n  \"lastModified\": \"2025-05-07T15:30:45.123\",\n  \"version\": 3\n}\n```\n\n**Error Codes:**\n- **400:** Invalid parameter value (e.g., missing or empty file).\n- **401:** Authentication required or invalid ticket.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "GetGlobalLogo": {
      "Summary": "Retrieve Global Logo",
      "Description": "This endpoint retrieves the current global logo for SimpleMDG from OpenText. The response returns a NodeResponse object containing the full node details including the binary content of the logo file.\n\n**Parameters:**\n- No parameters required.\n\n**Example Response JSON:**\n\n```json\n{\n  \"nodeId\": 12345,\n  \"type\": 144,\n  \"type_name\": \"Document\",\n  \"name\": \"GlobalLogo\",\n  \"file_name\": \"logo.png\",\n  \"file_type\": \"image/png\",\n  \"content\": \"[Base64 encoded binary content]\"\n}\n```\n\n**Error Codes:**\n- **401:** Authentication required or invalid ticket.\n- **404:** Logo not found.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "DeleteGlobalLogo": {
      "Summary": "Delete Global Logo",
      "Description": "This endpoint deletes the current global logo for SimpleMDG from OpenText. The response returns a success message if the operation was successful.\n\n**Parameters:**\n- No parameters required.\n\n**Example Response:**\n\n```\nGlobal logo deleted successfully\n```\n\n**Error Codes:**\n- **401:** Authentication required or invalid ticket.\n- **404:** Logo not found.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "CreateBackgroundImage": {
      "Summary": "Create Background Image",
      "Description": "This endpoint creates a new background image for SimpleMDG in OpenText. The response returns a JSON object containing the status of the operation and details about the background image file.\n\n**Required Parameters:**\n- **file** (IFormFile): The background image file to upload.\n- **displayName** (string): The display name for the background image.\n\n**Example Response JSON:**\n\n```json\n{\n  \"success\": true,\n  \"message\": \"Background image created successfully\",\n  \"backgroundId\": \"12346\",\n  \"displayName\": \"Blue Gradient\",\n  \"fileName\": \"blue-gradient.jpg\",\n  \"downloadUrl\": \"https://opentext.example.com/api/v2/nodes/12346/content\",\n  \"fileSize\": 135790,\n  \"lastModified\": \"2025-05-07T15:45:30.456\"\n}\n```\n\n**Error Codes:**\n- **400:** Invalid parameter value (e.g., missing or empty file, or a background image with the same name already exists).\n- **401:** Authentication required or invalid ticket.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "GetBackgroundImageByName": {
      "Summary": "Retrieve Background Image by Name",
      "Description": "This endpoint retrieves a specific background image by its name for SimpleMDG from OpenText. The response returns a NodeResponse object containing the full node details including the binary content of the background image file.\n\n**Required Parameters:**\n- **name** (string): Name of the background image to retrieve.\n\n**Example Response JSON:**\n\n```json\n{\n  \"nodeId\": 12346,\n  \"type\": 144,\n  \"type_name\": \"Document\",\n  \"name\": \"Blue Gradient\",\n  \"file_name\": \"blue-gradient.jpg\",\n  \"file_type\": \"image/jpeg\",\n  \"content\": \"[Base64 encoded binary content]\"\n}\n```\n\n**Error Codes:**\n- **401:** Authentication required or invalid ticket.\n- **404:** Background image not found.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "UpdateBackgroundImageByName": {
      "Summary": "Update Background Image by Name",
      "Description": "This endpoint updates an existing background image by its name for SimpleMDG in OpenText. The response returns a JSON object containing the status of the operation and details about the updated background image file.\n\n**Required Parameters:**\n- **name** (string): Name of the background image to update.\n- **file** (IFormFile): The new background image file to upload.\n\n**Example Response JSON:**\n\n```json\n{\n  \"success\": true,\n  \"message\": \"Background image updated successfully with new version\",\n  \"backgroundId\": \"12346\",\n  \"displayName\": \"Blue Gradient\",\n  \"fileName\": \"blue-gradient-v2.jpg\",\n  \"downloadUrl\": \"https://opentext.example.com/api/v2/nodes/12346/content\",\n  \"fileSize\": 142580,\n  \"lastModified\": \"2025-05-07T16:15:22.789\"\n}\n```\n\n**Error Codes:**\n- **400:** Invalid parameter value (e.g., missing or empty file).\n- **401:** Authentication required or invalid ticket.\n- **404:** Background image not found.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "ListBackgroundImages": {
      "Summary": "List Background Images",
      "Description": "This endpoint retrieves a paged list of all available background images for SimpleMDG in OpenText. The response returns a JSON object containing the status of the operation and a list of background image information.\n\n**Optional Parameters:**\n- **searchTerm** (string): Optional search term to filter images by name.\n- **pageSize** (int): Number of items per page (default: 20).\n- **pageNumber** (int): Page number (1-based, default: 1).\n\n**Example Response JSON:**\n\n```json\n{\n  \"success\": true,\n  \"message\": \"Found 3 background images\",\n  \"totalCount\": 3,\n  \"pageSize\": 20,\n  \"pageNumber\": 1,\n  \"totalPages\": 1,\n  \"images\": [\n    {\n      \"backgroundId\": \"12346\",\n      \"displayName\": \"Blue Gradient\",\n      \"fileSize\": 142580\n    },\n    {\n      \"backgroundId\": \"12347\",\n      \"displayName\": \"Green Forest\",\n      \"fileSize\": 256000\n    },\n    {\n      \"backgroundId\": \"12348\",\n      \"displayName\": \"Mountain Sunset\",\n      \"fileSize\": 189750\n    }\n  ]\n}\n```\n\n**Error Codes:**\n- **401:** Authentication required or invalid ticket.\n- **500:** Internal server error. Please contact the API administrator."
    },
    "DeleteBackgroundImageByName": {
      "Summary": "Delete Background Image by Name",
      "Description": "This endpoint deletes a specific background image by its name for SimpleMDG from OpenText. The response returns a success message if the operation was successful.\n\n**Required Parameters:**\n- **name** (string): Name of the background image to delete.\n\n**Example Response:**\n\n```\nBackground image 'Blue Gradient' deleted successfully\n```\n\n**Error Codes:**\n- **401:** Authentication required or invalid ticket.\n- **404:** Background image not found.\n- **500:** Internal server error. Please contact the API administrator."
    }
  }
}
